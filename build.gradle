buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.palantir.gradle.docker:gradle-docker:0.25.0"
    }
}




plugins {
    id 'scala'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
}

repositories {
    mavenCentral()
}

ext {
    scalaVersion = "2.12.10"

}

tasks.withType(ScalaCompile) {
    ScalaCompileOptions.metaClass.daemonServer = true
    ScalaCompileOptions.metaClass.fork = true
    ScalaCompileOptions.metaClass.useAnt = false
    ScalaCompileOptions.metaClass.useCompileDaemon = false
}


bootJar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

String imageName = "projectone"

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image imageName
    ports '8443:8443'
    clean true
}


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

test {
    testLogging.showStandardStreams = true
}


dependencies {



    compile group: 'org.scala-lang', name: 'scala-library', version: '2.12.10'


    implementation 'junit:junit:4.12'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.springframework.boot:spring-boot-devtools:2.3.2.RELEASE"
    compile "com.sun.xml.bind:jaxb-impl:2.2.3-1"
    compile "org.apache.httpcomponents:httpclient:4.5.12"
    compile "org.apache.clerezza.ext:org.json.simple:0.4"
    compile "javax.json:javax.json-api:1.1.4"
    compile "org.apache.cassandra:cassandra-all:4.0-beta1"
    compile "org.glassfish:javax.json:1.1"
    compile "com.google.guava:guava:21.0"
    compile "com.eatthepath:java-otp:0.2.0"
    compile "com.warrenstrange:googleauth:1.5.0"
    compile "org.springframework.boot:spring-boot-starter-web:2.3.2.RELEASE"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testCompile "org.springframework.boot:spring-boot-starter-test:2.3.2.RELEASE"
    compile "javax.servlet:javax.servlet-api:4.0.1"
    compile "javax.validation:validation-api:2.0.1.Final"
    compile "org.hibernate:hibernate-validator:5.2.4.Final"
    compile "org.springframework.boot:spring-boot-starter-tomcat:*"
    compile "mysql:mysql-connector-java:8.0.21"
    compile "org.slf4j:slf4j-api:1.7.30"
    compile "org.projectlombok:lombok:1.18.12"
    compile "com.liferay:com.fasterxml.jackson.databind:2.10.3.LIFERAY-PATCHED-1"
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.3.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.3.3.RELEASE'
    compile "org.postgresql:postgresql:42.2.15"
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.30.10'
    compile group: 'com.google.oauth-client', name: 'google-oauth-client', version: '1.31.0'
    compile group: 'com.google.oauth-client', name: 'google-oauth-client-jetty', version: '1.31.0'
    compile group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.21.1'
    compile group: 'com.google.gdata', name: 'core', version: '1.47.1'
    compile group: 'com.auth0', name: 'java-jwt', version: '3.10.3'
    compile 'com.google.cloud:google-cloud-bigquery:1.116.10'
    compile 'io.jsonwebtoken:jjwt-api:0.11.1'
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.1'
    runtime 'io.jsonwebtoken:jjwt-jackson:0.11.1'
    compile "net.dongliu:requests:5.0.8"


}
